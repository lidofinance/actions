name: Deploy IPFS Base

on:
  workflow_call:
    inputs:
      current_branch:
        description: "Current branch"
        required: true
        type: string
      ipfs_folder:
        description: "IPFS build folder"
        required: true
        type: string
      is_create_release:
        description: "Create github release"
        default: false
        type: boolean
      tag:
        description: "Tag for relase"
        required: false
        type: string
      FILEBASE_BUCKET_NAME:
        description: "Filebase bucket name"
        type: string
    secrets:
      W3S_TOKEN:
        description: "Web3Storage token"
      W3S_PROOF:
        description: "Web3Storage proof"
      GW3_TOKEN:
        description: "Gateway3 token"
      GW3_ACCESS_KEY:
        description: "Gateway3 access key"
      FILEBASE_TOKEN:
        description: "Filebase token"

permissions:
  contents: write

jobs:
  deploy:
    env:
      FILE_NAME: ipfs_source_code
    runs-on: ubuntu-latest
    environment: IPFS
    name: Pin to IPFS
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/download-artifact@v4
        id: download
        with:
          name: ${{ inputs.ipfs_folder }}
          path: ${{ inputs.ipfs_folder }}
      - name: Set output date and last commit
        id: vars
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "TIME=$(date +'%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "COMMIT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_OUTPUT"
          echo "TAG_COMMIT_SHA=$(git rev-parse --short $(git rev-list -n 1 $TAG))" >> "$GITHUB_OUTPUT"
        env:
          TAG: ${{ inputs.tag }}
      - name: IPFS deploy
        id: deploy
        uses: lidofinance/actions/.github/actions/ipfs-deploy@main
        with:
          W3S_TOKEN: ${{ secrets.W3S_TOKEN }}
          W3S_PROOF: ${{ secrets.W3S_PROOF }}
          GW3_TOKEN: ${{ secrets.GW3_TOKEN }}
          GW3_ACCESS_KEY: ${{ secrets.GW3_ACCESS_KEY }}
          FILEBASE_TOKEN: ${{ secrets.FILEBASE_TOKEN }}
          FILEBASE_BUCKET_NAME: ${{ inputs.FILEBASE_BUCKET_NAME }}
          PATH_TO_IPFS_CONTENT: ${{ inputs.ipfs_folder }}
          IPFS_PIN_NAME: "${{ github.event.repository.name }}:${{ steps.vars.outputs.TAG_COMMIT_SHA || steps.vars.outputs.COMMIT_SHA }}(${{ steps.vars.outputs.DATE }}:${{ steps.vars.outputs.TIME }})"
      - name: Create ipfs source code archive
        if: inputs.is_create_release
        id: car
        run: |
          mv /tmp/$IPFS_PIN_NAME.car ./$FILE_NAME.car
          zip -r $FILE_NAME.zip $IPFS_CONTENT_NAME/
        env:
          IPFS_CONTENT_NAME: ${{ inputs.ipfs_folder }}
          FILE_NAME: ${{ env.FILE_NAME }}
          IPFS_PIN_NAME: "${{ steps.deploy.outputs.ipfs_pin_name }}"
      - name: Get release body from existing release
        if: inputs.is_create_release
        id: release-body
        uses: lidofinance/actions/.github/actions/get-release@main
        with:
          TAG: ${{ inputs.tag }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create or update IPFS release draft
        if: inputs.is_create_release
        uses: lidofinance/actions/.github/actions/ipfs-release@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BODY: "${{ steps.release-body.outputs.existing_release_body }}\n\n${{ steps.deploy.outputs.release_body }}"
          TAG: ${{ inputs.tag }}
          TITLE: "${{ steps.release-body.outputs.existing_release_title }} (IPFS Pinning ${{ steps.vars.outputs.DATE }})"
          TARGET: ${{ inputs.current_branch }}
          FILE_NAME: ${{ env.FILE_NAME }}
